# -*- coding: utf-8 -*-
"""drivingDistanceScript.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nYN0aPGyigGEiqN02nYF7xdGxQNlujO6
"""

#install python packages and googlemaps dependencies
!pip install googlemaps

import googlemaps

#all 100 indian cities from data scraping in java
indian_cities = ['Haora', 'Gorakhpur', 'Udaipur', 'Indore', 'Asansol', 'Calicut', 'Belgaum', 'Amravati', 'Chennai', 'Thane', 'Tirunelveli', 'Jaipur', 
                 'Mysore', 'Hyderabad', 'Ranchi', 'Ajmer', 'Cuttack', 'Nagpur', 'Ahmadabad', 'Faridabad', 'Guntur', 'Hubli', 'Gulbarga', 'Amritsar', 'Cochin',
                 'Srinagar', 'Tiruppur', 'Mumbai', 'Nellore', 'Bareilly', 'Solapur', 'Coimbatore', 'Ahmadnagar', 'Nasik', 'Akola', 'Quilon', 'Jammu',
                 'Moradabad', 'Dhule', 'Chandigarh', 'Warangal', 'Jalandhar', 'Shiliguri', 'Jodhpur', 'Kalyan', 'Korba', 'Benares', 'Bhilai', 'Aurangabad',
                 'Jamnagar', 'Allahabad', 'Gwalior', 'Jamshedpur', 'Jhansi', 'Tiruchchirappalli', 'Thiruvananthapuram', 'Ludhiana', 'Bhubaneshwar',
                 'Jalgaon', 'Gaya', 'Vishakhapatnam', 'Vijayawada', 'Raipur', 'Kolkata', 'Surat', 'Mangalore', 'Saharanpur', 'Aligarh', 'Pune', 'Dehra', 'Bhopal',
                 'Lucknow', 'Delhi', 'Guwahati', 'Ujjain', 'Rajkot', 'Madurai', 'Bhatpara', 'Pimpri', 'Kota', 'Kanpur', 'Vadodara', 'Ulhasnagar', 'Bengalooru', 'Durgapur',
                 'Meerut', 'Patna', 'Ghaziabad', 'Bikaner', 'Malegaon', 'Agra', 'Bokaro', 'Jabalpur', 'Kolhapur', 'Bhavnagar', 'Bhiwandi', 'Panihati', 'Goa', 'Varanasi']

# for each combination of cities
for start_node in indian_cities:
  for end_node in indian_cities:
    # node should not have edge to itself as we know the weight is 0 (distance to itself is 0)
    if (start_node != end_node):
      api_key = 'AIzaSyBIpaQ8SlBCNzjRLGCyANufkmt089wbzH0' #API key should be unrestricted
      maps = googlemaps.Client(key=api_key)
      
      # from distance matrix, we get distance data, the first text field is driving distance between two cities
      drive_dist = maps.distance_matrix(start_node, end_node)['rows'][0]['elements'][0]
      dist_in_km = drive_dist['distance']['text']
      final_dist = dist_in_km.split()[0]
      
      # print each city (nodes) and then the weight
      # same format as java data so all I do is copy paste the output to data textfile in java program in the data folder
      print(start_node + ' ' + end_node + ' ' + final_dist)